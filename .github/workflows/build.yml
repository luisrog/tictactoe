name: Build, Analize and Scan

on:
  push:
    branches:
      - main


jobs:
  build-analyze-scan:
    name: Build
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Build and Analyze with SonarQube
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: npm install dependency
        run: npm install

      - name: Trivy File Scan
        run: trivy fs . > trivifs.txt

      - name: Docker build and push 
        run: | 
          # Run commands to build and push Docker images 
          docker build -t tic-tac-toe . 
          # Tag Docker Image
          docker tag tic-tac-toe ricardooshiro/tictactoe:latest
          # Login to Docker Hub
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          # Push Docker Image
          docker push ricardooshiro/tictactoe:latest 
        env: 
            DOCKER_CLI_ACI: 1

      - name: Image Scan by Trivy
        run: trivy image ricardooshiro/tictactoe:latest > trivyimage.txt

  deploy:
   needs: build-analyze-scan  
   runs-on: [self-hosted]
   steps:
      - name: docker pull image
        run: docker pull ricardooshiro/tictactoe:latest

      - name: Image scan
        run: trivy image ricardooshiro/tictactoe:latest > trivyimagedeploy.txt  
  
      - name: Run Docker Container
        run: |
          # Verificar si el contenedor ya está en ejecución
          if [ "$(docker ps -q -f name=game)" ]; then
            echo "Stopping existing container..."
            docker stop game
            docker rm game
          fi
      
          # Iniciar nuevo contenedor
          docker run -d --name game -p 3000:3000 ricardooshiro/tictactoe:latest
      

      - name: Update kubeconfig
        run: aws eks --region us-east-2 update-kubeconfig --name EKS_CLOUD

      - name: Deploy to kubernetes
        run: kubectl apply -f deployment-service.yml
  
      - name: Send a Slack Notification
        if: always()
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#githubactions-eks'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  

        